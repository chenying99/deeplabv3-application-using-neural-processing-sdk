'''Executes the steps to change the background of the original image with the help of raw 
    input generated by the snpe-tensorflow-to-dlc tool provided in Qualcomm Neural Processing SDK '''

# Library Import
import numpy as np
import cv2
import os 
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("--output_raw", metavar="RawOutput", help="Provide the output generated raw file 
			presents in output/Result_0 directory after running snpe-net-run", required=True, type=str)
parser.add_argument("--img_file_path", metavar="Imagepath", help="Give original image file path to 
			post-process(Background changing) the output of snpe-net-run", required=True, type=str)

args = parser.parse_args()


class ChangeBackGroundImage:
	def __init__(self):
		self.img_path = args.img_file_path
		self.raw_input = args.output_raw
		if((os.path.isfile(self.img_path)) == False):
            print("File not found!")
			sys.exit()
		if((os.path.isfile(self.raw_input)) == False):
            print("File not found!")
			sys.exit()
		

	def change_background(self):
		arr = np.fromfile(open(self.raw_input, 'r'), dtype="float32")
		arr = np.reshape(arr, (513,513,1))
		segment = arr[342:, 342:]
		arr[arr == 15] = 255
		original_img = cv2.imread(self.img_path)

		arr2 = cv2.resize(segment,(original_img.shape[1], original_img.shape[0]))
		print(arr.shape)
		for i in range(arr2.shape[0]):
			for j in range(arr2.shape[1]):
				if (arr2[i][j] != 255):
					original_img[i][j] = original_img[i][j][0] = original_img[i][j][1] = original_img[i][j][2]
		cv2.imwrite('image_with_background_changed.jpg', original_img)


if __name__ == '__main__':
    convert_img = ChangeBackGroundImage()
    convert_img.change_background()


